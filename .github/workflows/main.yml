name: Testes QA-Solar - CI

on:
  pull_request:
    branches:
      - main
      - main-workflow
  workflow_dispatch:

jobs:
  cypress-tests:
    name: Cypress Testes QA-Solar
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TURBO_TELEMETRY_DISABLED: 1
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests_base
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.1.0

      - name: Instalar dependências do Monorepo
        run: yarn install

      - name: Executar seeders
        run: chmod +x .github/scripts/run-seeders.sh && .github/scripts/run-seeders.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Iniciar backend e frontend
        run: npx turbo run dev &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 3001

      - name: Esperar backend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 3001 && echo "Backend está pronto!" && exit 0
            echo "Aguardando backend subir..."
            sleep 5
          done
          echo "Backend não subiu a tempo." && exit 1

      - name: Esperar frontend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 8181 && echo "Frontend está pronto!" && exit 0
            echo "Aguardando frontend subir..."
            sleep 5
          done
          echo "Frontend não subiu a tempo." && exit 1

      - name: Executar testes Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: apps/cypress
          start: npx cypress run --record --browser chrome --config-file cypress.config.ts
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_API_URL: ${{ secrets.CYPRESS_API_URL }}
          CYPRESS_BASE_URL: ${{ secrets.CYPRESS_BASE_URL }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_CYPRESS }}

  playwright-tests:
    name: Playwright Testes QA-Solar
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TURBO_TELEMETRY_DISABLED: 1
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests_base
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar cache do Yarn
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.1.0

      - name: Instalar dependências do Monorepo
        run: yarn install

      - name: Executar seeders
        run: chmod +x .github/scripts/run-seeders.sh && .github/scripts/run-seeders.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Iniciar backend e frontend
        run: npx turbo run dev &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 3001

      - name: Esperar backend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 3001 && echo "Backend está pronto!" && exit 0
            echo "Aguardando backend subir..."
            sleep 5
          done
          echo "Backend não subiu a tempo." && exit 1

      - name: Esperar frontend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 8181 && echo "Frontend está pronto!" && exit 0
            echo "Aguardando frontend subir..."
            sleep 5
          done
          echo "Frontend não subiu a tempo." && exit 1

      - name: Instalar navegadores para Playwright
        run: yarn playwright install --with-deps chromium

      - name: Executar testes Playwright
        run: |
          cd apps/playwright
          yarn play:run
        env:
          PLAY_API_URL: ${{ secrets.PLAY_API_URL }}
          PLAY_BASE_URL: ${{ secrets.PLAY_BASE_URL }}

      - name: Upload de relatório Playwright
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: playwright-report
          path: apps/playwright/playwright-report/
          retention-days: 10

  robot-framework-tests:
    name: Robot Framework Testes QA-Solar
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TURBO_TELEMETRY_DISABLED: 1
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests_base
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar cache do Yarn
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.1.0

      - name: Configurar Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.11
          check-latest: true

      - name: Instalar dependências do Monorepo
        run: yarn install

      - name: Executar seeders
        run: chmod +x .github/scripts/run-seeders.sh && .github/scripts/run-seeders.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Iniciar backend e frontend
        run: npx turbo run dev &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 3001

      - name: Esperar backend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 3001 && echo "Backend está pronto!" && exit 0
            echo "Aguardando backend subir..."
            sleep 5
          done
          echo "Backend não subiu a tempo." && exit 1

      - name: Esperar frontend subir
        run: |
          for i in {1..30}; do
            nc -z localhost 8181 && echo "Frontend está pronto!" && exit 0
            echo "Aguardando frontend subir..."
            sleep 5
          done
          echo "Frontend não subiu a tempo." && exit 1

      - name: Configurar Robot Framework
        run: chmod +x .github/scripts/setup-dependencies.sh && .github/scripts/setup-dependencies.sh

      - name: Instalar dependências do Robot Framework
        run: |
          cd apps/robot
          python3.11 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Inicializar navegador do Robot Framework
        run: |
          cd apps/robot
          source venv/bin/activate
          rfbrowser init chromium

      - name: Executar testes Robot Framework
        run: |
          cd apps/robot
          source venv/bin/activate
          make test-all

      - name: Salvar relatórios Robot Framework
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: robot-report
          path: apps/robot/results/reports/
          retention-days: 10

  docker-deploy:
    name: Deploy Docker
    runs-on: ubuntu-latest
    needs: [cypress-tests, playwright-tests, robot-framework-tests]
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir e enviar a imagem do Backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/qa-solar-backend:latest -f backend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/qa-solar-backend:latest

      - name: Construir e enviar a imagem do Frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/qa-solar-frontend:latest -f frontend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/qa-solar-frontend:latest