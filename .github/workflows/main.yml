name: Testes QA-Solar - CI

on:
  pull_request:
    branches:
      - main
      - main-workflow
  workflow_dispatch:

jobs:
  filter:
    name: Filtrar arquivos alterados
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Filtrar arquivos alterados
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            docs:
              - 'docs/**'
            backend:
              - 'apps/backend/**'
            frontend:
              - 'apps/frontend/**'

  # FASE 1: Testes Unitários
  backend-unit-tests:
    if: needs.filter.outputs.backend == 'true'
    needs: [filter]
    uses: ./.github/workflows/backend.yml

  frontend-unit-tests:
    if: needs.filter.outputs.frontend == 'true'
    needs: [filter]
    uses: ./.github/workflows/frontend.yml

  # FASE 2: Testes E2E (executam após os unitários quando disponíveis)
  cypress-tests:
    needs: [filter, backend-unit-tests, frontend-unit-tests]
    if: always() && (needs.backend-unit-tests.result == 'success' || needs.backend-unit-tests.result == 'skipped') && (needs.frontend-unit-tests.result == 'success' || needs.frontend-unit-tests.result == 'skipped')
    uses: ./.github/workflows/cypress.yml

  playwright-tests:
    needs: [filter, backend-unit-tests, frontend-unit-tests]
    if: always() && (needs.backend-unit-tests.result == 'success' || needs.backend-unit-tests.result == 'skipped') && (needs.frontend-unit-tests.result == 'success' || needs.frontend-unit-tests.result == 'skipped')
    uses: ./.github/workflows/playwright.yml

  robot-framework-tests:
    needs: [filter, backend-unit-tests, frontend-unit-tests]
    if: always() && (needs.backend-unit-tests.result == 'success' || needs.backend-unit-tests.result == 'skipped') && (needs.frontend-unit-tests.result == 'success' || needs.frontend-unit-tests.result == 'skipped')
    uses: ./.github/workflows/robot.yml

  selenium-tests:
    needs: [filter, backend-unit-tests, frontend-unit-tests]
    if: always() && (needs.backend-unit-tests.result == 'success' || needs.backend-unit-tests.result == 'skipped') && (needs.frontend-unit-tests.result == 'success' || needs.frontend-unit-tests.result == 'skipped')
    uses: ./.github/workflows/selenium.yml

  docker-deploy:
    if: github.base_ref == 'main'
    needs:
      [cypress-tests, playwright-tests, robot-framework-tests, selenium-tests]
    uses: ./.github/workflows/docker-deploy.yml
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  docs-deploy:
    if: github.base_ref == 'main' && needs.filter.outputs.docs == 'true'
    needs:
      [
        filter,
        cypress-tests,
        playwright-tests,
        robot-framework-tests,
        selenium-tests,
      ]
    uses: ./.github/workflows/docs-deploy.yml
    permissions:
      contents: write
