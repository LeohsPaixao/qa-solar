"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[157],{7188:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Tests/Robot/project","title":"\ud83d\udcc2 Projeto","description":"\ud83d\udd27 Configura\xe7\xe3o e Execu\xe7\xe3o","source":"@site/docs/Tests/Robot/project.mdx","sourceDirName":"Tests/Robot","slug":"/Tests/Robot/project","permalink":"/qa-solar/docs/Tests/Robot/project","draft":false,"unlisted":false,"editUrl":"https://github.com/LeohsPaixao/qa-solar/tree/main/docs/docs/Tests/Robot/project.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"Sidebar","previous":{"title":"\ud83c\udfe0 Home","permalink":"/qa-solar/docs/Tests/Robot/home"},"next":{"title":"\ud83e\uddea Tipos de Testes","permalink":"/qa-solar/docs/Tests/Robot/tests-types"}}');var o=n(2540),a=n(8453);const i={sidebar_position:2},t="\ud83d\udcc2 Projeto",d={},l=[{value:"\ud83d\udd27 Configura\xe7\xe3o e Execu\xe7\xe3o",id:"-configura\xe7\xe3o-e-execu\xe7\xe3o",level:2},{value:"\ud83d\udccb Pr\xe9-requisitos",id:"-pr\xe9-requisitos",level:3},{value:"\ud83d\ude80 Comandos Dispon\xedveis",id:"-comandos-dispon\xedveis",level:3},{value:"Configura\xe7\xe3o Inicial",id:"configura\xe7\xe3o-inicial",level:4},{value:"Execu\xe7\xe3o de Testes",id:"execu\xe7\xe3o-de-testes",level:4},{value:"\ud83d\udcc2 Estrutura do Projeto",id:"-estrutura-do-projeto",level:2},{value:"\u2699\ufe0f Configura\xe7\xf5es Avan\xe7adas",id:"\ufe0f-configura\xe7\xf5es-avan\xe7adas",level:2},{value:"\ud83d\udd27 Configura\xe7\xe3o do Robot Framework",id:"-configura\xe7\xe3o-do-robot-framework",level:3},{value:"\ud83c\udf10 Vari\xe1veis de Ambiente",id:"-vari\xe1veis-de-ambiente",level:3},{value:"\ud83d\udd27 Configura\xe7\xe3o do Makefile",id:"-configura\xe7\xe3o-do-makefile",level:3},{value:"\ud83d\udcda Keywords e Recursos",id:"-keywords-e-recursos",level:2},{value:"\ud83d\udd10 Keywords de Autentica\xe7\xe3o",id:"-keywords-de-autentica\xe7\xe3o",level:3},{value:"\ud83c\udfb2 Keywords de Gera\xe7\xe3o de Dados",id:"-keywords-de-gera\xe7\xe3o-de-dados",level:3},{value:"\ud83e\uddea Padr\xe3o de Testes",id:"-padr\xe3o-de-testes",level:3},{value:"\ud83d\udee0\ufe0f Bibliotecas Customizadas",id:"\ufe0f-bibliotecas-customizadas",level:2},{value:"\ud83c\udfb2 CustomDataLibrary",id:"-customdatalibrary",level:3},{value:"\ud83c\udfaf GenerateCPFLibrary",id:"-generatecpflibrary",level:3},{value:"\ud83d\udd27 CustomLibrary",id:"-customlibrary",level:3},{value:"\ud83d\udee0\ufe0f Depend\xeancias Principais",id:"\ufe0f-depend\xeancias-principais",level:2},{value:"Produ\xe7\xe3o",id:"produ\xe7\xe3o",level:3},{value:"Desenvolvimento",id:"desenvolvimento",level:3},{value:"\ud83d\ude80 Otimiza\xe7\xf5es de Performance",id:"-otimiza\xe7\xf5es-de-performance",level:2},{value:"\u26a1 Configura\xe7\xf5es de Paraleliza\xe7\xe3o",id:"-configura\xe7\xf5es-de-paraleliza\xe7\xe3o",level:3},{value:"\ud83d\udd27 Configura\xe7\xf5es do Browser",id:"-configura\xe7\xf5es-do-browser",level:3}];function c(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"-projeto",children:"\ud83d\udcc2 Projeto"})}),"\n",(0,o.jsx)(s.h2,{id:"-configura\xe7\xe3o-e-execu\xe7\xe3o",children:"\ud83d\udd27 Configura\xe7\xe3o e Execu\xe7\xe3o"}),"\n",(0,o.jsx)(s.h3,{id:"-pr\xe9-requisitos",children:"\ud83d\udccb Pr\xe9-requisitos"}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"\u26a0\ufe0f Importante"}),': Certifique-se de que as depend\xeancias foram instaladas no projeto raiz "qa-solar" e que o comando ',(0,o.jsx)(s.code,{children:"yarn dev"})," foi executado antes de iniciar os testes."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Requisitos do Sistema:"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Python 3.8+"}),": Interpretador Python necess\xe1rio"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Virtual Environment"}),": Ambiente virtual isolado (recomendado)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Chrome/Chromium"}),": Navegador para execu\xe7\xe3o dos testes"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"-comandos-dispon\xedveis",children:"\ud83d\ude80 Comandos Dispon\xedveis"}),"\n",(0,o.jsx)(s.h4,{id:"configura\xe7\xe3o-inicial",children:"Configura\xe7\xe3o Inicial"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"# Criar ambiente virtual\npython -m venv venv\n\n# Ativar ambiente virtual\n# Linux/Mac:\nsource venv/bin/activate\n# Windows:\nvenv\\Scripts\\activate\n\n# Instalar depend\xeancias\npip install -r requirements.txt\n\n# Instalar browsers do Playwright\nrfbrowser init\n"})}),"\n",(0,o.jsx)(s.h4,{id:"execu\xe7\xe3o-de-testes",children:"Execu\xe7\xe3o de Testes"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Via Makefile (Recomendado)"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"# Executar todos os testes\nmake test-all\n\n# Executar testes com tag espec\xedfica\nmake test-scenario TAG=login\n\n# Executar arquivo espec\xedfico\nmake test-file FILE_PATH=tests/specs/login.robot\n\n# Executar testes em paralelo\nmake parallel\n\n# Limpar relat\xf3rios\nmake clean\n\n# Verificar qualidade do c\xf3digo\nmake lint\n\n# Formatar arquivos\nmake tidy\n\n# Ver ajuda\nmake help\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"Via Robot Framework"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"# Executar todos os testes\nrobot --outputdir results/reports tests/specs\n\n# Executar com tag espec\xedfica\nrobot --outputdir results/reports --include login tests/specs\n\n# Executar em paralelo\npabot --processes 4 --outputdir results/reports tests/specs\n\n# Executar com argumentos\nrobot --outputdir results/reports -A args.robotargs tests/specs\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-estrutura-do-projeto",children:"\ud83d\udcc2 Estrutura do Projeto"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-plaintext",children:"tests/robot/\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 specs/                           # Arquivos de teste (.robot)\n\u2502   \u2502   \u251c\u2500\u2500 login.robot                  # Testes de autentica\xe7\xe3o\n\u2502   \u2502   \u251c\u2500\u2500 register.robot               # Testes de cadastro\n\u2502   \u2502   \u251c\u2500\u2500 profile.robot                # Testes de perfil\n\u2502   \u2502   \u251c\u2500\u2500 listUsers.robot              # Testes de listagem\n\u2502   \u2502   \u2514\u2500\u2500 recoverPassword.robot        # Testes de recupera\xe7\xe3o\n\u2502   \u251c\u2500\u2500 resources/                       # Keywords e recursos\n\u2502   \u2502   \u251c\u2500\u2500 keywords.resource            # Keywords principais\n\u2502   \u2502   \u251c\u2500\u2500 loginKeywords.resource       # Keywords de login\n\u2502   \u2502   \u251c\u2500\u2500 registerKeywords.resource    # Keywords de cadastro\n\u2502   \u2502   \u251c\u2500\u2500 profileKeywords.resource     # Keywords de perfil\n\u2502   \u2502   \u251c\u2500\u2500 listUsersKeywords.resource   # Keywords de listagem\n\u2502   \u2502   \u2514\u2500\u2500 recoverKeywords.resource     # Keywords de recupera\xe7\xe3o\n\u2502   \u251c\u2500\u2500 library/                         # Bibliotecas Python\n\u2502   \u2502   \u251c\u2500\u2500 CustomDataLibrary.py         # Gera\xe7\xe3o de dados\n\u2502   \u2502   \u251c\u2500\u2500 CustomLibrary.py             # Utilit\xe1rios gerais\n\u2502   \u2502   \u2514\u2500\u2500 GenerateCPFLibrary.py        # Gera\xe7\xe3o de CPF\n\u2502   \u2514\u2500\u2500 data/                            # Dados e vari\xe1veis\n\u2502       \u2514\u2500\u2500 variables.py                 # Vari\xe1veis globais\n\u251c\u2500\u2500 results/                             # Relat\xf3rios e logs\n\u2502   \u251c\u2500\u2500 reports/                         # Relat\xf3rios HTML\n\u2502   \u251c\u2500\u2500 logs/                            # Logs de execu\xe7\xe3o\n\u2502   \u2514\u2500\u2500 screenshots/                     # Screenshots de falhas\n\u251c\u2500\u2500 requirements.txt                     # Depend\xeancias Python\n\u251c\u2500\u2500 Makefile                             # Comandos simplificados\n\u251c\u2500\u2500 package.json                         # Metadados do projeto\n\u251c\u2500\u2500 args.robotargs                       # Argumentos do Robot\n\u2514\u2500\u2500 CHANGELOG.md                         # Hist\xf3rico de mudan\xe7as\n"})}),"\n",(0,o.jsx)(s.h2,{id:"\ufe0f-configura\xe7\xf5es-avan\xe7adas",children:"\u2699\ufe0f Configura\xe7\xf5es Avan\xe7adas"}),"\n",(0,o.jsx)(s.h3,{id:"-configura\xe7\xe3o-do-robot-framework",children:"\ud83d\udd27 Configura\xe7\xe3o do Robot Framework"}),"\n",(0,o.jsx)(s.p,{children:"O projeto utiliza configura\xe7\xf5es otimizadas para performance e legibilidade:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-robot",children:"*** Settings ***\nDocumentation       Suite de testes para validar funcionalidades.\n\nResource            ../resources/keywords.resource\nResource            ../resources/loginKeywords.resource\n\nTest Setup          Preparar Teste    ${BASE_URL}\nTest Teardown       Fechar O Navegador\n\n*** Test Cases ***\nCen\xe1rio 1: Deveria Ser Poss\xedvel Fazer Login\n    [Documentation]    Testa login com credenciais v\xe1lidas.\n    Digitar O Email Do Usuario    generic@example.com\n    Digitar O Password Do Usuario    123456\n    Clicar No Bot\xe3o De Entrar Na Conta\n    Verificar O Feedback Do Usuario    Login realizado com sucesso!\n"})}),"\n",(0,o.jsx)(s.h3,{id:"-vari\xe1veis-de-ambiente",children:"\ud83c\udf10 Vari\xe1veis de Ambiente"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'# tests/data/variables.py\nAPI_URL = "http://localhost:3001"\nBASE_URL = "http://localhost:8181/"\n\n# Credenciais\nEMAIL = "generic@example.com"\nPASSWORD = "123456"\n\n# Mensagens\nTOAST_MESSAGE = "Por favor, corrija os erros no formul\xe1rio."\nINPUT_NAMES = ["fullname", "cpfcnpj", "email", "password", "password-confirmation"]\nINPUT_ERRORS = ["O Nome Completo \xe9 obrigat\xf3rio.", "O CPF/CNPJ \xe9 obrigat\xf3rio.", ...]\n'})}),"\n",(0,o.jsx)(s.h3,{id:"-configura\xe7\xe3o-do-makefile",children:"\ud83d\udd27 Configura\xe7\xe3o do Makefile"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-makefile",children:'# Diret\xf3rios e arquivos\nTESTS_DIR = tests/specs\nOUTPUT_DIR = results/reports\nOUTPUT_DIR_BROWSER = results\nPROCESSES = 4\n\n# Comandos principais\ntest-all: clean\n\t@echo "Executando todos os testes com Robot Framework..."\n\tBROWSER_OUTPUTDIR=$(OUTPUT_DIR_BROWSER)/screenshots robot --outputdir $(OUTPUT_DIR) $(TESTS_DIR)\n\nparallel: clean\n\t@echo "Executando testes em paralelo com Pabot..."\n\tBROWSER_OUTPUTDIR=$(OUTPUT_DIR_BROWSER)/screenshots pabot --processes $(PROCESSES) --outputdir $(OUTPUT_DIR) $(TESTS_DIR)\n\nlint:\n\t@echo "Verificando a qualidade do c\xf3digo com Robocop..."\n\trobocop -ft .robot,.resource $(TESTS_DIR)\n'})}),"\n",(0,o.jsx)(s.h2,{id:"-keywords-e-recursos",children:"\ud83d\udcda Keywords e Recursos"}),"\n",(0,o.jsx)(s.h3,{id:"-keywords-de-autentica\xe7\xe3o",children:"\ud83d\udd10 Keywords de Autentica\xe7\xe3o"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-robot",children:'*** Keywords ***\nPreparar Teste Com API\n    [Arguments]    ${BASE_URL}    ${route}=\n    Abrir O Navegador    ${BASE_URL}\n    Login Via API\n    Navegar Para A Rota    ${route}\n\nLogin Via API\n    ${payload}=    Evaluate    {"email": "${EMAIL}", "password": "${PASSWORD}"}    json\n    ${response}=    POST    ${API_URL}/auth/login    json=${payload}\n    Should Be Equal As Numbers    ${response.status_code}    200\n    \n    ${responseJson}=    Evaluate    ${response.text}    json\n    ${token}=    Set Variable    ${responseJson["token"]}\n    \n    LocalStorage Set Item    user-token    ${token}\n'})}),"\n",(0,o.jsx)(s.h3,{id:"-keywords-de-gera\xe7\xe3o-de-dados",children:"\ud83c\udfb2 Keywords de Gera\xe7\xe3o de Dados"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-robot",children:'*** Keywords ***\nPreencher Todos Os Campos\n    ${cpf}=    Generate Valid Cpf\n    ${fullName}=    Generate Full Name\n    ${email}=    Generate Email\n    ${phone}=    Generate Phone\n    \n    Fill Text    css=[data-testid="input-fullname"]    ${fullName}\n    Fill Text    css=[data-testid="input-socialname"]    Nome Social\n    Fill Text    css=[data-testid="input-document"]    ${cpf}\n    Fill Text    css=[data-testid="input-phone"]    ${phone}\n    Fill Text    css=[data-testid="input-email"]    ${email}\n    Fill Text    css=[data-testid="input-password"]    123456\n    Fill Text    css=[data-testid="input-password-confirmation"]    123456\n'})}),"\n",(0,o.jsx)(s.h3,{id:"-padr\xe3o-de-testes",children:"\ud83e\uddea Padr\xe3o de Testes"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-robot",children:"*** Test Cases ***\nCen\xe1rio 1: Deveria Ser Poss\xedvel Fazer Login Com Credenciais V\xe1lidas\n    [Documentation]    Testa login com credenciais corretas.\n    [Tags]    login    smoke\n    Digitar O Email Do Usuario    generic@example.com\n    Digitar O Password Do Usuario    123456\n    Clicar No Bot\xe3o De Entrar Na Conta\n    Verificar O Feedback Do Usuario    Login realizado com sucesso!\n"})}),"\n",(0,o.jsx)(s.h2,{id:"\ufe0f-bibliotecas-customizadas",children:"\ud83d\udee0\ufe0f Bibliotecas Customizadas"}),"\n",(0,o.jsx)(s.h3,{id:"-customdatalibrary",children:"\ud83c\udfb2 CustomDataLibrary"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from faker import Faker\n\nclass CustomDataLibrary:\n    def __init__(self):\n        self.faker = Faker(\"pt_BR\")\n    \n    def generate_full_name(self):\n        return self.faker.name()\n    \n    def generate_first_name(self):\n        return self.faker.first_name()\n\n    def generate_email(self):\n        return self.faker.email()\n\n    def generate_phone(self):\n        return '(12) 9 8888-7777'\n"})}),"\n",(0,o.jsx)(s.h3,{id:"-generatecpflibrary",children:"\ud83c\udfaf GenerateCPFLibrary"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'import random\n\nclass GenerateCPFLibrary:\n    def generate_valid_cpf(self):\n        """Gera um CPF v\xe1lido aleat\xf3rio."""\n        def calculate_digit(cpf):\n            weights = range(len(cpf) + 1, 1, -1)\n            total = sum(int(digit) * weight for digit, weight in zip(cpf, weights))\n            remainder = total % 11\n            return str(11 - remainder if remainder > 1 else 0)\n\n        cpf_base = [random.randint(0, 9) for _ in range(9)]\n        cpf_base.append(int(calculate_digit(cpf_base)))\n        cpf_base.append(int(calculate_digit(cpf_base)))\n        return "".join(map(str, cpf_base))\n'})}),"\n",(0,o.jsx)(s.h3,{id:"-customlibrary",children:"\ud83d\udd27 CustomLibrary"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from urllib.parse import urlparse\n\nclass CustomLibrary:\n    def __init__(self):\n        pass\n\n    def parse_url(self, url):\n        """Analisa uma URL e retorna os componentes como um objeto ParseResult."""\n        parsed_url = urlparse(url)\n        return parsed_url\n    \n    def get_from_list(self, lst, index):\n        """Retorna o elemento da lista no \xedndice especificado."""\n        return lst[index]\n\n    def get_list_length(self, lst):\n        """Retorna o comprimento da lista."""\n        return len(lst)\n'})}),"\n",(0,o.jsx)(s.h2,{id:"\ufe0f-depend\xeancias-principais",children:"\ud83d\udee0\ufe0f Depend\xeancias Principais"}),"\n",(0,o.jsx)(s.h3,{id:"produ\xe7\xe3o",children:"Produ\xe7\xe3o"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Robot Framework"}),": ",(0,o.jsx)(s.code,{children:"7.1.1"})," - Framework de automa\xe7\xe3o"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Browser Library"}),": ",(0,o.jsx)(s.code,{children:"19.0.1"})," - Automa\xe7\xe3o de navegadores com Playwright"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Requests Library"}),": ",(0,o.jsx)(s.code,{children:"0.9.7"})," - Testes de API"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Faker"}),": ",(0,o.jsx)(s.code,{children:"33.1.0"})," - Gera\xe7\xe3o de dados fict\xedcios"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Python-dotenv"}),": ",(0,o.jsx)(s.code,{children:"1.0.1"})," - Gerenciamento de vari\xe1veis de ambiente"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"desenvolvimento",children:"Desenvolvimento"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Pabot"}),": ",(0,o.jsx)(s.code,{children:"2.18.0"})," - Execu\xe7\xe3o paralela de testes"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Robocop"}),": ",(0,o.jsx)(s.code,{children:"5.5.0"})," - Linting e qualidade de c\xf3digo"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Robotidy"}),": ",(0,o.jsx)(s.code,{children:"4.14.0"})," - Formata\xe7\xe3o de arquivos .robot"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Assertion Engine"}),": ",(0,o.jsx)(s.code,{children:"3.0.3"})," - Engine de assertions"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Stacktrace"}),": ",(0,o.jsx)(s.code,{children:"0.4.1"})," - Rastreamento de stack traces"]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"-otimiza\xe7\xf5es-de-performance",children:"\ud83d\ude80 Otimiza\xe7\xf5es de Performance"}),"\n",(0,o.jsx)(s.h3,{id:"-configura\xe7\xf5es-de-paraleliza\xe7\xe3o",children:"\u26a1 Configura\xe7\xf5es de Paraleliza\xe7\xe3o"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Pabot"}),": Execu\xe7\xe3o paralela com 4 processos"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Browser Isolation"}),": Cada processo executa em navegador isolado"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Resource Sharing"}),": Compartilhamento otimizado de recursos"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Result Aggregation"}),": Consolida\xe7\xe3o autom\xe1tica de resultados"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"-configura\xe7\xf5es-do-browser",children:"\ud83d\udd27 Configura\xe7\xf5es do Browser"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Headless Mode"}),": Suporte para execu\xe7\xe3o sem interface gr\xe1fica"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Screenshot"}),": Capturas autom\xe1ticas em caso de falha"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Video Recording"}),": Grava\xe7\xe3o de v\xeddeos para debugging"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.strong,{children:"Network Interception"}),": Intercepta\xe7\xe3o de requisi\xe7\xf5es de rede"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var r=n(3696);const o={},a=r.createContext(o);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);